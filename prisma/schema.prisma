generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]
  orders    Order[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Product {
  id           String      @id @default(cuid())
  productTitle String
  description  String
  price        Float
  imageUrl     String
  league       String
  team         String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  orderItems   OrderItem[]
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  totalPrice Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  productId         String
  orderId           String
  quantity          Int      @default(1)
  size              String
  customDescription String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
  order             Order    @relation(fields: [orderId], references: [id])
  product           Product  @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}
